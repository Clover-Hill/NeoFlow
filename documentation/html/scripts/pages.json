[{"name":"ALL()","description":"com.newera.neoflow.data.models.Filter.ALL","location":"app/com.newera.neoflow.data.models/-filter/-a-l-l/index.html","searchKeys":["ALL","ALL()","com.newera.neoflow.data.models.Filter.ALL"]},{"name":"COMPLETED()","description":"com.newera.neoflow.data.models.Filter.COMPLETED","location":"app/com.newera.neoflow.data.models/-filter/-c-o-m-p-l-e-t-e-d/index.html","searchKeys":["COMPLETED","COMPLETED()","com.newera.neoflow.data.models.Filter.COMPLETED"]},{"name":"IMPORTANT()","description":"com.newera.neoflow.data.models.Filter.IMPORTANT","location":"app/com.newera.neoflow.data.models/-filter/-i-m-p-o-r-t-a-n-t/index.html","searchKeys":["IMPORTANT","IMPORTANT()","com.newera.neoflow.data.models.Filter.IMPORTANT"]},{"name":"abstract class TodoDatabase : RoomDatabase","description":"com.newera.neoflow.data.database.TodoDatabase","location":"app/com.newera.neoflow.data.database/-todo-database/index.html","searchKeys":["TodoDatabase","abstract class TodoDatabase : RoomDatabase","com.newera.neoflow.data.database.TodoDatabase"]},{"name":"abstract fun editTodo(todoItem: TodoItem)","description":"com.newera.neoflow.ui.adapters.AddEditTask.editTodo","location":"app/com.newera.neoflow.ui.adapters/-add-edit-task/edit-todo.html","searchKeys":["editTodo","abstract fun editTodo(todoItem: TodoItem)","com.newera.neoflow.ui.adapters.AddEditTask.editTodo"]},{"name":"abstract fun getAllTodos(): Flow<List<TodoItem>>","description":"com.newera.neoflow.logic.dao.TodoDao.getAllTodos","location":"app/com.newera.neoflow.logic.dao/-todo-dao/get-all-todos.html","searchKeys":["getAllTodos","abstract fun getAllTodos(): Flow<List<TodoItem>>","com.newera.neoflow.logic.dao.TodoDao.getAllTodos"]},{"name":"abstract fun getTodoById(todoId: Int): Flow<TodoItem>","description":"com.newera.neoflow.logic.dao.TodoDao.getTodoById","location":"app/com.newera.neoflow.logic.dao/-todo-dao/get-todo-by-id.html","searchKeys":["getTodoById","abstract fun getTodoById(todoId: Int): Flow<TodoItem>","com.newera.neoflow.logic.dao.TodoDao.getTodoById"]},{"name":"abstract fun getTodoDao(): TodoDao","description":"com.newera.neoflow.data.database.TodoDatabase.getTodoDao","location":"app/com.newera.neoflow.data.database/-todo-database/get-todo-dao.html","searchKeys":["getTodoDao","abstract fun getTodoDao(): TodoDao","com.newera.neoflow.data.database.TodoDatabase.getTodoDao"]},{"name":"abstract fun onSubTaskTitleChanged(position: Int, newTitle: String)","description":"com.newera.neoflow.ui.adapters.OnTaskChanged.onSubTaskTitleChanged","location":"app/com.newera.neoflow.ui.adapters/-on-task-changed/on-sub-task-title-changed.html","searchKeys":["onSubTaskTitleChanged","abstract fun onSubTaskTitleChanged(position: Int, newTitle: String)","com.newera.neoflow.ui.adapters.OnTaskChanged.onSubTaskTitleChanged"]},{"name":"abstract fun removeSubTask(position: Int)","description":"com.newera.neoflow.ui.adapters.OnTaskChanged.removeSubTask","location":"app/com.newera.neoflow.ui.adapters/-on-task-changed/remove-sub-task.html","searchKeys":["removeSubTask","abstract fun removeSubTask(position: Int)","com.newera.neoflow.ui.adapters.OnTaskChanged.removeSubTask"]},{"name":"abstract fun removeSubTask(todoItemId: Int, tasks: List<Task>)","description":"com.newera.neoflow.ui.adapters.AddEditTask.removeSubTask","location":"app/com.newera.neoflow.ui.adapters/-add-edit-task/remove-sub-task.html","searchKeys":["removeSubTask","abstract fun removeSubTask(todoItemId: Int, tasks: List<Task>)","com.newera.neoflow.ui.adapters.AddEditTask.removeSubTask"]},{"name":"abstract fun removeTodo(todoItem: TodoItem)","description":"com.newera.neoflow.ui.adapters.AddEditTask.removeTodo","location":"app/com.newera.neoflow.ui.adapters/-add-edit-task/remove-todo.html","searchKeys":["removeTodo","abstract fun removeTodo(todoItem: TodoItem)","com.newera.neoflow.ui.adapters.AddEditTask.removeTodo"]},{"name":"abstract fun updateSubTaskCompletion(position: Int, isCompleted: Boolean)","description":"com.newera.neoflow.ui.adapters.OnTaskChanged.updateSubTaskCompletion","location":"app/com.newera.neoflow.ui.adapters/-on-task-changed/update-sub-task-completion.html","searchKeys":["updateSubTaskCompletion","abstract fun updateSubTaskCompletion(position: Int, isCompleted: Boolean)","com.newera.neoflow.ui.adapters.OnTaskChanged.updateSubTaskCompletion"]},{"name":"abstract fun updateSubTaskCompletion(todoItem: TodoItem, position: Int, isChecked: Boolean)","description":"com.newera.neoflow.ui.adapters.AddEditTask.updateSubTaskCompletion","location":"app/com.newera.neoflow.ui.adapters/-add-edit-task/update-sub-task-completion.html","searchKeys":["updateSubTaskCompletion","abstract fun updateSubTaskCompletion(todoItem: TodoItem, position: Int, isChecked: Boolean)","com.newera.neoflow.ui.adapters.AddEditTask.updateSubTaskCompletion"]},{"name":"abstract fun updateTodoCompletion(todoItem: TodoItem, completed: Boolean)","description":"com.newera.neoflow.ui.adapters.AddEditTask.updateTodoCompletion","location":"app/com.newera.neoflow.ui.adapters/-add-edit-task/update-todo-completion.html","searchKeys":["updateTodoCompletion","abstract fun updateTodoCompletion(todoItem: TodoItem, completed: Boolean)","com.newera.neoflow.ui.adapters.AddEditTask.updateTodoCompletion"]},{"name":"abstract fun updateTodoDate(todoItem: TodoItem)","description":"com.newera.neoflow.ui.adapters.AddEditTask.updateTodoDate","location":"app/com.newera.neoflow.ui.adapters/-add-edit-task/update-todo-date.html","searchKeys":["updateTodoDate","abstract fun updateTodoDate(todoItem: TodoItem)","com.newera.neoflow.ui.adapters.AddEditTask.updateTodoDate"]},{"name":"abstract fun updateTodoImportance(todoItem: TodoItem, important: Boolean)","description":"com.newera.neoflow.ui.adapters.AddEditTask.updateTodoImportance","location":"app/com.newera.neoflow.ui.adapters/-add-edit-task/update-todo-importance.html","searchKeys":["updateTodoImportance","abstract fun updateTodoImportance(todoItem: TodoItem, important: Boolean)","com.newera.neoflow.ui.adapters.AddEditTask.updateTodoImportance"]},{"name":"abstract fun updateTodoTime(todoItem: TodoItem)","description":"com.newera.neoflow.ui.adapters.AddEditTask.updateTodoTime","location":"app/com.newera.neoflow.ui.adapters/-add-edit-task/update-todo-time.html","searchKeys":["updateTodoTime","abstract fun updateTodoTime(todoItem: TodoItem)","com.newera.neoflow.ui.adapters.AddEditTask.updateTodoTime"]},{"name":"abstract suspend fun addTodo(todoItem: TodoItem)","description":"com.newera.neoflow.logic.dao.TodoDao.addTodo","location":"app/com.newera.neoflow.logic.dao/-todo-dao/add-todo.html","searchKeys":["addTodo","abstract suspend fun addTodo(todoItem: TodoItem)","com.newera.neoflow.logic.dao.TodoDao.addTodo"]},{"name":"abstract suspend fun removeTodo(todoItem: TodoItem)","description":"com.newera.neoflow.logic.dao.TodoDao.removeTodo","location":"app/com.newera.neoflow.logic.dao/-todo-dao/remove-todo.html","searchKeys":["removeTodo","abstract suspend fun removeTodo(todoItem: TodoItem)","com.newera.neoflow.logic.dao.TodoDao.removeTodo"]},{"name":"abstract suspend fun updateTodo(todoItem: TodoItem)","description":"com.newera.neoflow.logic.dao.TodoDao.updateTodo","location":"app/com.newera.neoflow.logic.dao/-todo-dao/update-todo.html","searchKeys":["updateTodo","abstract suspend fun updateTodo(todoItem: TodoItem)","com.newera.neoflow.logic.dao.TodoDao.updateTodo"]},{"name":"abstract suspend fun updateTodoChecked(todoItemId: Int, completed: Boolean)","description":"com.newera.neoflow.logic.dao.TodoDao.updateTodoChecked","location":"app/com.newera.neoflow.logic.dao/-todo-dao/update-todo-checked.html","searchKeys":["updateTodoChecked","abstract suspend fun updateTodoChecked(todoItemId: Int, completed: Boolean)","com.newera.neoflow.logic.dao.TodoDao.updateTodoChecked"]},{"name":"abstract suspend fun updateTodoDueDate(todoItemId: Int, dueDate: Long)","description":"com.newera.neoflow.logic.dao.TodoDao.updateTodoDueDate","location":"app/com.newera.neoflow.logic.dao/-todo-dao/update-todo-due-date.html","searchKeys":["updateTodoDueDate","abstract suspend fun updateTodoDueDate(todoItemId: Int, dueDate: Long)","com.newera.neoflow.logic.dao.TodoDao.updateTodoDueDate"]},{"name":"abstract suspend fun updateTodoDueDateTime(todoItemId: Int, dueDate: Long, remainderTime: Long)","description":"com.newera.neoflow.logic.dao.TodoDao.updateTodoDueDateTime","location":"app/com.newera.neoflow.logic.dao/-todo-dao/update-todo-due-date-time.html","searchKeys":["updateTodoDueDateTime","abstract suspend fun updateTodoDueDateTime(todoItemId: Int, dueDate: Long, remainderTime: Long)","com.newera.neoflow.logic.dao.TodoDao.updateTodoDueDateTime"]},{"name":"abstract suspend fun updateTodoImportant(todoItemId: Int, important: Boolean)","description":"com.newera.neoflow.logic.dao.TodoDao.updateTodoImportant","location":"app/com.newera.neoflow.logic.dao/-todo-dao/update-todo-important.html","searchKeys":["updateTodoImportant","abstract suspend fun updateTodoImportant(todoItemId: Int, important: Boolean)","com.newera.neoflow.logic.dao.TodoDao.updateTodoImportant"]},{"name":"abstract suspend fun updateTodoTasks(todoItemId: Int, tasks: List<Task>)","description":"com.newera.neoflow.logic.dao.TodoDao.updateTodoTasks","location":"app/com.newera.neoflow.logic.dao/-todo-dao/update-todo-tasks.html","searchKeys":["updateTodoTasks","abstract suspend fun updateTodoTasks(todoItemId: Int, tasks: List<Task>)","com.newera.neoflow.logic.dao.TodoDao.updateTodoTasks"]},{"name":"abstract suspend fun updateTodoTime(todoItemId: Int, remainderTime: Long)","description":"com.newera.neoflow.logic.dao.TodoDao.updateTodoTime","location":"app/com.newera.neoflow.logic.dao/-todo-dao/update-todo-time.html","searchKeys":["updateTodoTime","abstract suspend fun updateTodoTime(todoItemId: Int, remainderTime: Long)","com.newera.neoflow.logic.dao.TodoDao.updateTodoTime"]},{"name":"abstract suspend fun updateTodoTitle(todoItemId: Int, title: String)","description":"com.newera.neoflow.logic.dao.TodoDao.updateTodoTitle","location":"app/com.newera.neoflow.logic.dao/-todo-dao/update-todo-title.html","searchKeys":["updateTodoTitle","abstract suspend fun updateTodoTitle(todoItemId: Int, title: String)","com.newera.neoflow.logic.dao.TodoDao.updateTodoTitle"]},{"name":"class AlarmReceiver : BroadcastReceiver","description":"com.newera.neoflow.logic.receiver.AlarmReceiver","location":"app/com.newera.neoflow.logic.receiver/-alarm-receiver/index.html","searchKeys":["AlarmReceiver","class AlarmReceiver : BroadcastReceiver","com.newera.neoflow.logic.receiver.AlarmReceiver"]},{"name":"class AllTodoFragment : Fragment, AddEditTask","description":"com.newera.neoflow.ui.fragments.AllTodoFragment","location":"app/com.newera.neoflow.ui.fragments/-all-todo-fragment/index.html","searchKeys":["AllTodoFragment","class AllTodoFragment : Fragment, AddEditTask","com.newera.neoflow.ui.fragments.AllTodoFragment"]},{"name":"class AllTodoViewModel constructor(todoRepository: TodoRepository) : ViewModel","description":"com.newera.neoflow.ui.viewmodels.AllTodoViewModel","location":"app/com.newera.neoflow.ui.viewmodels/-all-todo-view-model/index.html","searchKeys":["AllTodoViewModel","class AllTodoViewModel constructor(todoRepository: TodoRepository) : ViewModel","com.newera.neoflow.ui.viewmodels.AllTodoViewModel"]},{"name":"class Converters","description":"com.newera.neoflow.data.utils.Converters","location":"app/com.newera.neoflow.data.utils/-converters/index.html","searchKeys":["Converters","class Converters","com.newera.neoflow.data.utils.Converters"]},{"name":"class EditSubTaskAdapter(listener: OnTaskChanged) : ListAdapter<Task, EditSubTaskAdapter.EditSubTaskViewHolder> ","description":"com.newera.neoflow.ui.adapters.EditSubTaskAdapter","location":"app/com.newera.neoflow.ui.adapters/-edit-sub-task-adapter/index.html","searchKeys":["EditSubTaskAdapter","class EditSubTaskAdapter(listener: OnTaskChanged) : ListAdapter<Task, EditSubTaskAdapter.EditSubTaskViewHolder> ","com.newera.neoflow.ui.adapters.EditSubTaskAdapter"]},{"name":"class EditTodoFragment : Fragment, OnTaskChanged","description":"com.newera.neoflow.ui.fragments.EditTodoFragment","location":"app/com.newera.neoflow.ui.fragments/-edit-todo-fragment/index.html","searchKeys":["EditTodoFragment","class EditTodoFragment : Fragment, OnTaskChanged","com.newera.neoflow.ui.fragments.EditTodoFragment"]},{"name":"class EditTodoViewModel constructor(todoRepository: TodoRepository) : ViewModel","description":"com.newera.neoflow.ui.viewmodels.EditTodoViewModel","location":"app/com.newera.neoflow.ui.viewmodels/-edit-todo-view-model/index.html","searchKeys":["EditTodoViewModel","class EditTodoViewModel constructor(todoRepository: TodoRepository) : ViewModel","com.newera.neoflow.ui.viewmodels.EditTodoViewModel"]},{"name":"class MainActivity : AppCompatActivity","description":"com.newera.neoflow.ui.MainActivity","location":"app/com.newera.neoflow.ui/-main-activity/index.html","searchKeys":["MainActivity","class MainActivity : AppCompatActivity","com.newera.neoflow.ui.MainActivity"]},{"name":"class SubTaskAdapter(todoItem: TodoItem, listener: AddEditTask) : RecyclerView.Adapter<SubTaskAdapter.SubTaskViewHolder> ","description":"com.newera.neoflow.ui.adapters.SubTaskAdapter","location":"app/com.newera.neoflow.ui.adapters/-sub-task-adapter/index.html","searchKeys":["SubTaskAdapter","class SubTaskAdapter(todoItem: TodoItem, listener: AddEditTask) : RecyclerView.Adapter<SubTaskAdapter.SubTaskViewHolder> ","com.newera.neoflow.ui.adapters.SubTaskAdapter"]},{"name":"class TodoAdapter(listener: AddEditTask) : ListAdapter<TodoItem, TodoAdapter.TodoViewHolder> ","description":"com.newera.neoflow.ui.adapters.TodoAdapter","location":"app/com.newera.neoflow.ui.adapters/-todo-adapter/index.html","searchKeys":["TodoAdapter","class TodoAdapter(listener: AddEditTask) : ListAdapter<TodoItem, TodoAdapter.TodoViewHolder> ","com.newera.neoflow.ui.adapters.TodoAdapter"]},{"name":"class TodoApplication : Application","description":"com.newera.neoflow.ui.TodoApplication","location":"app/com.newera.neoflow.ui/-todo-application/index.html","searchKeys":["TodoApplication","class TodoApplication : Application","com.newera.neoflow.ui.TodoApplication"]},{"name":"class TodoRepository constructor(todoDao: TodoDao)","description":"com.newera.neoflow.logic.repository.TodoRepository","location":"app/com.newera.neoflow.logic.repository/-todo-repository/index.html","searchKeys":["TodoRepository","class TodoRepository constructor(todoDao: TodoDao)","com.newera.neoflow.logic.repository.TodoRepository"]},{"name":"data class Task(id: Int?, title: String, isCompleted: Boolean) : Parcelable","description":"com.newera.neoflow.data.models.Task","location":"app/com.newera.neoflow.data.models/-task/index.html","searchKeys":["Task","data class Task(id: Int?, title: String, isCompleted: Boolean) : Parcelable","com.newera.neoflow.data.models.Task"]},{"name":"data class TodoItem(id: Int, title: String?, createdAt: Long, tasks: MutableList<Task>, dueDate: Long, remainderTime: Long, completed: Boolean, important: Boolean) : Parcelable","description":"com.newera.neoflow.data.models.TodoItem","location":"app/com.newera.neoflow.data.models/-todo-item/index.html","searchKeys":["TodoItem","data class TodoItem(id: Int, title: String?, createdAt: Long, tasks: MutableList<Task>, dueDate: Long, remainderTime: Long, completed: Boolean, important: Boolean) : Parcelable","com.newera.neoflow.data.models.TodoItem"]},{"name":"enum Filter : Enum<Filter> ","description":"com.newera.neoflow.data.models.Filter","location":"app/com.newera.neoflow.data.models/-filter/index.html","searchKeys":["Filter","enum Filter : Enum<Filter> ","com.newera.neoflow.data.models.Filter"]},{"name":"fun AlarmReceiver()","description":"com.newera.neoflow.logic.receiver.AlarmReceiver.AlarmReceiver","location":"app/com.newera.neoflow.logic.receiver/-alarm-receiver/-alarm-receiver.html","searchKeys":["AlarmReceiver","fun AlarmReceiver()","com.newera.neoflow.logic.receiver.AlarmReceiver.AlarmReceiver"]},{"name":"fun AllTodoFragment()","description":"com.newera.neoflow.ui.fragments.AllTodoFragment.AllTodoFragment","location":"app/com.newera.neoflow.ui.fragments/-all-todo-fragment/-all-todo-fragment.html","searchKeys":["AllTodoFragment","fun AllTodoFragment()","com.newera.neoflow.ui.fragments.AllTodoFragment.AllTodoFragment"]},{"name":"fun AllTodoViewModel(todoRepository: TodoRepository)","description":"com.newera.neoflow.ui.viewmodels.AllTodoViewModel.AllTodoViewModel","location":"app/com.newera.neoflow.ui.viewmodels/-all-todo-view-model/-all-todo-view-model.html","searchKeys":["AllTodoViewModel","fun AllTodoViewModel(todoRepository: TodoRepository)","com.newera.neoflow.ui.viewmodels.AllTodoViewModel.AllTodoViewModel"]},{"name":"fun Converters()","description":"com.newera.neoflow.data.utils.Converters.Converters","location":"app/com.newera.neoflow.data.utils/-converters/-converters.html","searchKeys":["Converters","fun Converters()","com.newera.neoflow.data.utils.Converters.Converters"]},{"name":"fun EditSubTaskAdapter(listener: OnTaskChanged)","description":"com.newera.neoflow.ui.adapters.EditSubTaskAdapter.EditSubTaskAdapter","location":"app/com.newera.neoflow.ui.adapters/-edit-sub-task-adapter/-edit-sub-task-adapter.html","searchKeys":["EditSubTaskAdapter","fun EditSubTaskAdapter(listener: OnTaskChanged)","com.newera.neoflow.ui.adapters.EditSubTaskAdapter.EditSubTaskAdapter"]},{"name":"fun EditSubTaskViewHolder(binding: <ERROR CLASS>)","description":"com.newera.neoflow.ui.adapters.EditSubTaskAdapter.EditSubTaskViewHolder.EditSubTaskViewHolder","location":"app/com.newera.neoflow.ui.adapters/-edit-sub-task-adapter/-edit-sub-task-view-holder/-edit-sub-task-view-holder.html","searchKeys":["EditSubTaskViewHolder","fun EditSubTaskViewHolder(binding: <ERROR CLASS>)","com.newera.neoflow.ui.adapters.EditSubTaskAdapter.EditSubTaskViewHolder.EditSubTaskViewHolder"]},{"name":"fun EditTodoFragment()","description":"com.newera.neoflow.ui.fragments.EditTodoFragment.EditTodoFragment","location":"app/com.newera.neoflow.ui.fragments/-edit-todo-fragment/-edit-todo-fragment.html","searchKeys":["EditTodoFragment","fun EditTodoFragment()","com.newera.neoflow.ui.fragments.EditTodoFragment.EditTodoFragment"]},{"name":"fun EditTodoViewModel(todoRepository: TodoRepository)","description":"com.newera.neoflow.ui.viewmodels.EditTodoViewModel.EditTodoViewModel","location":"app/com.newera.neoflow.ui.viewmodels/-edit-todo-view-model/-edit-todo-view-model.html","searchKeys":["EditTodoViewModel","fun EditTodoViewModel(todoRepository: TodoRepository)","com.newera.neoflow.ui.viewmodels.EditTodoViewModel.EditTodoViewModel"]},{"name":"fun MainActivity()","description":"com.newera.neoflow.ui.MainActivity.MainActivity","location":"app/com.newera.neoflow.ui/-main-activity/-main-activity.html","searchKeys":["MainActivity","fun MainActivity()","com.newera.neoflow.ui.MainActivity.MainActivity"]},{"name":"fun SubTaskAdapter(todoItem: TodoItem, listener: AddEditTask)","description":"com.newera.neoflow.ui.adapters.SubTaskAdapter.SubTaskAdapter","location":"app/com.newera.neoflow.ui.adapters/-sub-task-adapter/-sub-task-adapter.html","searchKeys":["SubTaskAdapter","fun SubTaskAdapter(todoItem: TodoItem, listener: AddEditTask)","com.newera.neoflow.ui.adapters.SubTaskAdapter.SubTaskAdapter"]},{"name":"fun SubTaskViewHolder(binding: <ERROR CLASS>)","description":"com.newera.neoflow.ui.adapters.SubTaskAdapter.SubTaskViewHolder.SubTaskViewHolder","location":"app/com.newera.neoflow.ui.adapters/-sub-task-adapter/-sub-task-view-holder/-sub-task-view-holder.html","searchKeys":["SubTaskViewHolder","fun SubTaskViewHolder(binding: <ERROR CLASS>)","com.newera.neoflow.ui.adapters.SubTaskAdapter.SubTaskViewHolder.SubTaskViewHolder"]},{"name":"fun Task(id: Int? = 0, title: String, isCompleted: Boolean = false)","description":"com.newera.neoflow.data.models.Task.Task","location":"app/com.newera.neoflow.data.models/-task/-task.html","searchKeys":["Task","fun Task(id: Int? = 0, title: String, isCompleted: Boolean = false)","com.newera.neoflow.data.models.Task.Task"]},{"name":"fun TodoAdapter(listener: AddEditTask)","description":"com.newera.neoflow.ui.adapters.TodoAdapter.TodoAdapter","location":"app/com.newera.neoflow.ui.adapters/-todo-adapter/-todo-adapter.html","searchKeys":["TodoAdapter","fun TodoAdapter(listener: AddEditTask)","com.newera.neoflow.ui.adapters.TodoAdapter.TodoAdapter"]},{"name":"fun TodoApplication()","description":"com.newera.neoflow.ui.TodoApplication.TodoApplication","location":"app/com.newera.neoflow.ui/-todo-application/-todo-application.html","searchKeys":["TodoApplication","fun TodoApplication()","com.newera.neoflow.ui.TodoApplication.TodoApplication"]},{"name":"fun TodoDatabase()","description":"com.newera.neoflow.data.database.TodoDatabase.TodoDatabase","location":"app/com.newera.neoflow.data.database/-todo-database/-todo-database.html","searchKeys":["TodoDatabase","fun TodoDatabase()","com.newera.neoflow.data.database.TodoDatabase.TodoDatabase"]},{"name":"fun TodoItem(id: Int = 0, title: String? = \"\", createdAt: Long = System.currentTimeMillis(), tasks: MutableList<Task> = ArrayList(), dueDate: Long = Calendar.getInstance().timeInMillis, remainderTime: Long = System.currentTimeMillis(), completed: Boolean = false, important: Boolean = false)","description":"com.newera.neoflow.data.models.TodoItem.TodoItem","location":"app/com.newera.neoflow.data.models/-todo-item/-todo-item.html","searchKeys":["TodoItem","fun TodoItem(id: Int = 0, title: String? = \"\", createdAt: Long = System.currentTimeMillis(), tasks: MutableList<Task> = ArrayList(), dueDate: Long = Calendar.getInstance().timeInMillis, remainderTime: Long = System.currentTimeMillis(), completed: Boolean = false, important: Boolean = false)","com.newera.neoflow.data.models.TodoItem.TodoItem"]},{"name":"fun TodoRepository(todoDao: TodoDao)","description":"com.newera.neoflow.logic.repository.TodoRepository.TodoRepository","location":"app/com.newera.neoflow.logic.repository/-todo-repository/-todo-repository.html","searchKeys":["TodoRepository","fun TodoRepository(todoDao: TodoDao)","com.newera.neoflow.logic.repository.TodoRepository.TodoRepository"]},{"name":"fun TodoViewHolder(binding: <ERROR CLASS>)","description":"com.newera.neoflow.ui.adapters.TodoAdapter.TodoViewHolder.TodoViewHolder","location":"app/com.newera.neoflow.ui.adapters/-todo-adapter/-todo-view-holder/-todo-view-holder.html","searchKeys":["TodoViewHolder","fun TodoViewHolder(binding: <ERROR CLASS>)","com.newera.neoflow.ui.adapters.TodoAdapter.TodoViewHolder.TodoViewHolder"]},{"name":"fun addTodo(todoItem: TodoItem): Job","description":"com.newera.neoflow.ui.viewmodels.AllTodoViewModel.addTodo","location":"app/com.newera.neoflow.ui.viewmodels/-all-todo-view-model/add-todo.html","searchKeys":["addTodo","fun addTodo(todoItem: TodoItem): Job","com.newera.neoflow.ui.viewmodels.AllTodoViewModel.addTodo"]},{"name":"fun bindSubTask(subTask: Task)","description":"com.newera.neoflow.ui.adapters.EditSubTaskAdapter.EditSubTaskViewHolder.bindSubTask","location":"app/com.newera.neoflow.ui.adapters/-edit-sub-task-adapter/-edit-sub-task-view-holder/bind-sub-task.html","searchKeys":["bindSubTask","fun bindSubTask(subTask: Task)","com.newera.neoflow.ui.adapters.EditSubTaskAdapter.EditSubTaskViewHolder.bindSubTask"]},{"name":"fun bindSubTask(subTask: Task)","description":"com.newera.neoflow.ui.adapters.SubTaskAdapter.SubTaskViewHolder.bindSubTask","location":"app/com.newera.neoflow.ui.adapters/-sub-task-adapter/-sub-task-view-holder/bind-sub-task.html","searchKeys":["bindSubTask","fun bindSubTask(subTask: Task)","com.newera.neoflow.ui.adapters.SubTaskAdapter.SubTaskViewHolder.bindSubTask"]},{"name":"fun bindTodo(todoItem: TodoItem)","description":"com.newera.neoflow.ui.adapters.TodoAdapter.TodoViewHolder.bindTodo","location":"app/com.newera.neoflow.ui.adapters/-todo-adapter/-todo-view-holder/bind-todo.html","searchKeys":["bindTodo","fun bindTodo(todoItem: TodoItem)","com.newera.neoflow.ui.adapters.TodoAdapter.TodoViewHolder.bindTodo"]},{"name":"fun cancelAlarm(todoItem: TodoItem, context: Context)","description":"com.newera.neoflow.logic.utils.Util.cancelAlarm","location":"app/com.newera.neoflow.logic.utils/-util/cancel-alarm.html","searchKeys":["cancelAlarm","fun cancelAlarm(todoItem: TodoItem, context: Context)","com.newera.neoflow.logic.utils.Util.cancelAlarm"]},{"name":"fun formatDate(dueDate: Long): String","description":"com.newera.neoflow.logic.utils.Util.formatDate","location":"app/com.newera.neoflow.logic.utils/-util/format-date.html","searchKeys":["formatDate","fun formatDate(dueDate: Long): String","com.newera.neoflow.logic.utils.Util.formatDate"]},{"name":"fun formatTime(time: Long): String","description":"com.newera.neoflow.logic.utils.Util.formatTime","location":"app/com.newera.neoflow.logic.utils/-util/format-time.html","searchKeys":["formatTime","fun formatTime(time: Long): String","com.newera.neoflow.logic.utils.Util.formatTime"]},{"name":"fun formatTimePicker(time: Long): String","description":"com.newera.neoflow.logic.utils.Util.formatTimePicker","location":"app/com.newera.neoflow.logic.utils/-util/format-time-picker.html","searchKeys":["formatTimePicker","fun formatTimePicker(time: Long): String","com.newera.neoflow.logic.utils.Util.formatTimePicker"]},{"name":"fun getAllTodos(): Flow<List<TodoItem>>","description":"com.newera.neoflow.logic.repository.TodoRepository.getAllTodos","location":"app/com.newera.neoflow.logic.repository/-todo-repository/get-all-todos.html","searchKeys":["getAllTodos","fun getAllTodos(): Flow<List<TodoItem>>","com.newera.neoflow.logic.repository.TodoRepository.getAllTodos"]},{"name":"fun getTodoById(todoItemId: Int): Flow<TodoItem>","description":"com.newera.neoflow.logic.repository.TodoRepository.getTodoById","location":"app/com.newera.neoflow.logic.repository/-todo-repository/get-todo-by-id.html","searchKeys":["getTodoById","fun getTodoById(todoItemId: Int): Flow<TodoItem>","com.newera.neoflow.logic.repository.TodoRepository.getTodoById"]},{"name":"fun getTodoById(todoItemId: Int): Flow<TodoItem>","description":"com.newera.neoflow.ui.viewmodels.EditTodoViewModel.getTodoById","location":"app/com.newera.neoflow.ui.viewmodels/-edit-todo-view-model/get-todo-by-id.html","searchKeys":["getTodoById","fun getTodoById(todoItemId: Int): Flow<TodoItem>","com.newera.neoflow.ui.viewmodels.EditTodoViewModel.getTodoById"]},{"name":"fun getTodoDao(todoDatabase: TodoDatabase): TodoDao","description":"com.newera.neoflow.logic.di.AppModule.getTodoDao","location":"app/com.newera.neoflow.logic.di/-app-module/get-todo-dao.html","searchKeys":["getTodoDao","fun getTodoDao(todoDatabase: TodoDatabase): TodoDao","com.newera.neoflow.logic.di.AppModule.getTodoDao"]},{"name":"fun getTodoDatabase(context: Context): TodoDatabase","description":"com.newera.neoflow.logic.di.AppModule.getTodoDatabase","location":"app/com.newera.neoflow.logic.di/-app-module/get-todo-database.html","searchKeys":["getTodoDatabase","fun getTodoDatabase(context: Context): TodoDatabase","com.newera.neoflow.logic.di.AppModule.getTodoDatabase"]},{"name":"fun getTodoList(todoItemId: Int): Flow<MutableList<Task>>","description":"com.newera.neoflow.ui.viewmodels.EditTodoViewModel.getTodoList","location":"app/com.newera.neoflow.ui.viewmodels/-edit-todo-view-model/get-todo-list.html","searchKeys":["getTodoList","fun getTodoList(todoItemId: Int): Flow<MutableList<Task>>","com.newera.neoflow.ui.viewmodels.EditTodoViewModel.getTodoList"]},{"name":"fun isTodoDateLessOrEqual(dueDate: Long): Boolean","description":"com.newera.neoflow.logic.utils.Util.isTodoDateLessOrEqual","location":"app/com.newera.neoflow.logic.utils/-util/is-todo-date-less-or-equal.html","searchKeys":["isTodoDateLessOrEqual","fun isTodoDateLessOrEqual(dueDate: Long): Boolean","com.newera.neoflow.logic.utils.Util.isTodoDateLessOrEqual"]},{"name":"fun jsonToTask(value: String): <ERROR CLASS>","description":"com.newera.neoflow.data.utils.Converters.jsonToTask","location":"app/com.newera.neoflow.data.utils/-converters/json-to-task.html","searchKeys":["jsonToTask","fun jsonToTask(value: String): <ERROR CLASS>","com.newera.neoflow.data.utils.Converters.jsonToTask"]},{"name":"fun removeTodo(todoItem: TodoItem): Job","description":"com.newera.neoflow.ui.viewmodels.AllTodoViewModel.removeTodo","location":"app/com.newera.neoflow.ui.viewmodels/-all-todo-view-model/remove-todo.html","searchKeys":["removeTodo","fun removeTodo(todoItem: TodoItem): Job","com.newera.neoflow.ui.viewmodels.AllTodoViewModel.removeTodo"]},{"name":"fun setAlarm(todoItem: TodoItem, context: Context, alarmCalendar: Calendar, view: View)","description":"com.newera.neoflow.logic.utils.Util.setAlarm","location":"app/com.newera.neoflow.logic.utils/-util/set-alarm.html","searchKeys":["setAlarm","fun setAlarm(todoItem: TodoItem, context: Context, alarmCalendar: Calendar, view: View)","com.newera.neoflow.logic.utils.Util.setAlarm"]},{"name":"fun showDatePicker(todoItem: TodoItem?, context: Context, datePickerListener: DatePickerDialog.OnDateSetListener)","description":"com.newera.neoflow.logic.utils.Util.showDatePicker","location":"app/com.newera.neoflow.logic.utils/-util/show-date-picker.html","searchKeys":["showDatePicker","fun showDatePicker(todoItem: TodoItem?, context: Context, datePickerListener: DatePickerDialog.OnDateSetListener)","com.newera.neoflow.logic.utils.Util.showDatePicker"]},{"name":"fun showTimePicker(todoItem: TodoItem?, context: Context, timePickerListener: TimePickerDialog.OnTimeSetListener)","description":"com.newera.neoflow.logic.utils.Util.showTimePicker","location":"app/com.newera.neoflow.logic.utils/-util/show-time-picker.html","searchKeys":["showTimePicker","fun showTimePicker(todoItem: TodoItem?, context: Context, timePickerListener: TimePickerDialog.OnTimeSetListener)","com.newera.neoflow.logic.utils.Util.showTimePicker"]},{"name":"fun taskToJson(value: List<Task>?): String","description":"com.newera.neoflow.data.utils.Converters.taskToJson","location":"app/com.newera.neoflow.data.utils/-converters/task-to-json.html","searchKeys":["taskToJson","fun taskToJson(value: List<Task>?): String","com.newera.neoflow.data.utils.Converters.taskToJson"]},{"name":"fun updateSubTaskCompletion(todoItem: TodoItem, position: Int, isChecked: Boolean): Job","description":"com.newera.neoflow.ui.viewmodels.AllTodoViewModel.updateSubTaskCompletion","location":"app/com.newera.neoflow.ui.viewmodels/-all-todo-view-model/update-sub-task-completion.html","searchKeys":["updateSubTaskCompletion","fun updateSubTaskCompletion(todoItem: TodoItem, position: Int, isChecked: Boolean): Job","com.newera.neoflow.ui.viewmodels.AllTodoViewModel.updateSubTaskCompletion"]},{"name":"fun updateSubTaskCompletion(todoItemId: Int, position: Int, isChecked: Boolean, tasks: List<Task>): Job","description":"com.newera.neoflow.ui.viewmodels.EditTodoViewModel.updateSubTaskCompletion","location":"app/com.newera.neoflow.ui.viewmodels/-edit-todo-view-model/update-sub-task-completion.html","searchKeys":["updateSubTaskCompletion","fun updateSubTaskCompletion(todoItemId: Int, position: Int, isChecked: Boolean, tasks: List<Task>): Job","com.newera.neoflow.ui.viewmodels.EditTodoViewModel.updateSubTaskCompletion"]},{"name":"fun updateTodoCompletion(todoItemId: Int, completed: Boolean): Job","description":"com.newera.neoflow.ui.viewmodels.AllTodoViewModel.updateTodoCompletion","location":"app/com.newera.neoflow.ui.viewmodels/-all-todo-view-model/update-todo-completion.html","searchKeys":["updateTodoCompletion","fun updateTodoCompletion(todoItemId: Int, completed: Boolean): Job","com.newera.neoflow.ui.viewmodels.AllTodoViewModel.updateTodoCompletion"]},{"name":"fun updateTodoDueDate(todoItemId: Int, dueDate: Long): Job","description":"com.newera.neoflow.ui.viewmodels.AllTodoViewModel.updateTodoDueDate","location":"app/com.newera.neoflow.ui.viewmodels/-all-todo-view-model/update-todo-due-date.html","searchKeys":["updateTodoDueDate","fun updateTodoDueDate(todoItemId: Int, dueDate: Long): Job","com.newera.neoflow.ui.viewmodels.AllTodoViewModel.updateTodoDueDate"]},{"name":"fun updateTodoDueDate(todoItemId: Int, dueDate: Long): Job","description":"com.newera.neoflow.ui.viewmodels.EditTodoViewModel.updateTodoDueDate","location":"app/com.newera.neoflow.ui.viewmodels/-edit-todo-view-model/update-todo-due-date.html","searchKeys":["updateTodoDueDate","fun updateTodoDueDate(todoItemId: Int, dueDate: Long): Job","com.newera.neoflow.ui.viewmodels.EditTodoViewModel.updateTodoDueDate"]},{"name":"fun updateTodoDueDateTime(todoItemId: Int, dueDate: Long, remainderTime: Long): Job","description":"com.newera.neoflow.ui.viewmodels.AllTodoViewModel.updateTodoDueDateTime","location":"app/com.newera.neoflow.ui.viewmodels/-all-todo-view-model/update-todo-due-date-time.html","searchKeys":["updateTodoDueDateTime","fun updateTodoDueDateTime(todoItemId: Int, dueDate: Long, remainderTime: Long): Job","com.newera.neoflow.ui.viewmodels.AllTodoViewModel.updateTodoDueDateTime"]},{"name":"fun updateTodoDueDateTime(todoItemId: Int, dueDate: Long, remainderTime: Long): Job","description":"com.newera.neoflow.ui.viewmodels.EditTodoViewModel.updateTodoDueDateTime","location":"app/com.newera.neoflow.ui.viewmodels/-edit-todo-view-model/update-todo-due-date-time.html","searchKeys":["updateTodoDueDateTime","fun updateTodoDueDateTime(todoItemId: Int, dueDate: Long, remainderTime: Long): Job","com.newera.neoflow.ui.viewmodels.EditTodoViewModel.updateTodoDueDateTime"]},{"name":"fun updateTodoImportance(todoItemId: Int, important: Boolean): Job","description":"com.newera.neoflow.ui.viewmodels.AllTodoViewModel.updateTodoImportance","location":"app/com.newera.neoflow.ui.viewmodels/-all-todo-view-model/update-todo-importance.html","searchKeys":["updateTodoImportance","fun updateTodoImportance(todoItemId: Int, important: Boolean): Job","com.newera.neoflow.ui.viewmodels.AllTodoViewModel.updateTodoImportance"]},{"name":"fun updateTodoTasks(todoItemId: Int, subTasks: List<Task>): Job","description":"com.newera.neoflow.ui.viewmodels.EditTodoViewModel.updateTodoTasks","location":"app/com.newera.neoflow.ui.viewmodels/-edit-todo-view-model/update-todo-tasks.html","searchKeys":["updateTodoTasks","fun updateTodoTasks(todoItemId: Int, subTasks: List<Task>): Job","com.newera.neoflow.ui.viewmodels.EditTodoViewModel.updateTodoTasks"]},{"name":"fun updateTodoTasks(todoItemId: Int, tasks: List<Task>): Job","description":"com.newera.neoflow.ui.viewmodels.AllTodoViewModel.updateTodoTasks","location":"app/com.newera.neoflow.ui.viewmodels/-all-todo-view-model/update-todo-tasks.html","searchKeys":["updateTodoTasks","fun updateTodoTasks(todoItemId: Int, tasks: List<Task>): Job","com.newera.neoflow.ui.viewmodels.AllTodoViewModel.updateTodoTasks"]},{"name":"fun updateTodoTime(todoItemId: Int, remainderTime: Long): Job","description":"com.newera.neoflow.ui.viewmodels.AllTodoViewModel.updateTodoTime","location":"app/com.newera.neoflow.ui.viewmodels/-all-todo-view-model/update-todo-time.html","searchKeys":["updateTodoTime","fun updateTodoTime(todoItemId: Int, remainderTime: Long): Job","com.newera.neoflow.ui.viewmodels.AllTodoViewModel.updateTodoTime"]},{"name":"fun updateTodoTime(todoItemId: Int, remainderTime: Long): Job","description":"com.newera.neoflow.ui.viewmodels.EditTodoViewModel.updateTodoTime","location":"app/com.newera.neoflow.ui.viewmodels/-edit-todo-view-model/update-todo-time.html","searchKeys":["updateTodoTime","fun updateTodoTime(todoItemId: Int, remainderTime: Long): Job","com.newera.neoflow.ui.viewmodels.EditTodoViewModel.updateTodoTime"]},{"name":"inner class EditSubTaskViewHolder(binding: <ERROR CLASS>) : RecyclerView.ViewHolder","description":"com.newera.neoflow.ui.adapters.EditSubTaskAdapter.EditSubTaskViewHolder","location":"app/com.newera.neoflow.ui.adapters/-edit-sub-task-adapter/-edit-sub-task-view-holder/index.html","searchKeys":["EditSubTaskViewHolder","inner class EditSubTaskViewHolder(binding: <ERROR CLASS>) : RecyclerView.ViewHolder","com.newera.neoflow.ui.adapters.EditSubTaskAdapter.EditSubTaskViewHolder"]},{"name":"inner class SubTaskViewHolder(binding: <ERROR CLASS>) : RecyclerView.ViewHolder","description":"com.newera.neoflow.ui.adapters.SubTaskAdapter.SubTaskViewHolder","location":"app/com.newera.neoflow.ui.adapters/-sub-task-adapter/-sub-task-view-holder/index.html","searchKeys":["SubTaskViewHolder","inner class SubTaskViewHolder(binding: <ERROR CLASS>) : RecyclerView.ViewHolder","com.newera.neoflow.ui.adapters.SubTaskAdapter.SubTaskViewHolder"]},{"name":"inner class TodoViewHolder(binding: <ERROR CLASS>) : RecyclerView.ViewHolder","description":"com.newera.neoflow.ui.adapters.TodoAdapter.TodoViewHolder","location":"app/com.newera.neoflow.ui.adapters/-todo-adapter/-todo-view-holder/index.html","searchKeys":["TodoViewHolder","inner class TodoViewHolder(binding: <ERROR CLASS>) : RecyclerView.ViewHolder","com.newera.neoflow.ui.adapters.TodoAdapter.TodoViewHolder"]},{"name":"interface AddEditTask","description":"com.newera.neoflow.ui.adapters.AddEditTask","location":"app/com.newera.neoflow.ui.adapters/-add-edit-task/index.html","searchKeys":["AddEditTask","interface AddEditTask","com.newera.neoflow.ui.adapters.AddEditTask"]},{"name":"interface OnTaskChanged","description":"com.newera.neoflow.ui.adapters.OnTaskChanged","location":"app/com.newera.neoflow.ui.adapters/-on-task-changed/index.html","searchKeys":["OnTaskChanged","interface OnTaskChanged","com.newera.neoflow.ui.adapters.OnTaskChanged"]},{"name":"interface TodoDao","description":"com.newera.neoflow.logic.dao.TodoDao","location":"app/com.newera.neoflow.logic.dao/-todo-dao/index.html","searchKeys":["TodoDao","interface TodoDao","com.newera.neoflow.logic.dao.TodoDao"]},{"name":"object AppModule","description":"com.newera.neoflow.logic.di.AppModule","location":"app/com.newera.neoflow.logic.di/-app-module/index.html","searchKeys":["AppModule","object AppModule","com.newera.neoflow.logic.di.AppModule"]},{"name":"object Comparators","description":"com.newera.neoflow.logic.utils.Comparators","location":"app/com.newera.neoflow.logic.utils/-comparators/index.html","searchKeys":["Comparators","object Comparators","com.newera.neoflow.logic.utils.Comparators"]},{"name":"object Util","description":"com.newera.neoflow.logic.utils.Util","location":"app/com.newera.neoflow.logic.utils/-util/index.html","searchKeys":["Util","object Util","com.newera.neoflow.logic.utils.Util"]},{"name":"open override fun editTodo(todoItem: TodoItem)","description":"com.newera.neoflow.ui.fragments.AllTodoFragment.editTodo","location":"app/com.newera.neoflow.ui.fragments/-all-todo-fragment/edit-todo.html","searchKeys":["editTodo","open override fun editTodo(todoItem: TodoItem)","com.newera.neoflow.ui.fragments.AllTodoFragment.editTodo"]},{"name":"open override fun getItemCount(): Int","description":"com.newera.neoflow.ui.adapters.SubTaskAdapter.getItemCount","location":"app/com.newera.neoflow.ui.adapters/-sub-task-adapter/get-item-count.html","searchKeys":["getItemCount","open override fun getItemCount(): Int","com.newera.neoflow.ui.adapters.SubTaskAdapter.getItemCount"]},{"name":"open override fun onBindViewHolder(holder: EditSubTaskAdapter.EditSubTaskViewHolder, position: Int)","description":"com.newera.neoflow.ui.adapters.EditSubTaskAdapter.onBindViewHolder","location":"app/com.newera.neoflow.ui.adapters/-edit-sub-task-adapter/on-bind-view-holder.html","searchKeys":["onBindViewHolder","open override fun onBindViewHolder(holder: EditSubTaskAdapter.EditSubTaskViewHolder, position: Int)","com.newera.neoflow.ui.adapters.EditSubTaskAdapter.onBindViewHolder"]},{"name":"open override fun onBindViewHolder(holder: SubTaskAdapter.SubTaskViewHolder, position: Int)","description":"com.newera.neoflow.ui.adapters.SubTaskAdapter.onBindViewHolder","location":"app/com.newera.neoflow.ui.adapters/-sub-task-adapter/on-bind-view-holder.html","searchKeys":["onBindViewHolder","open override fun onBindViewHolder(holder: SubTaskAdapter.SubTaskViewHolder, position: Int)","com.newera.neoflow.ui.adapters.SubTaskAdapter.onBindViewHolder"]},{"name":"open override fun onBindViewHolder(holder: TodoAdapter.TodoViewHolder, position: Int)","description":"com.newera.neoflow.ui.adapters.TodoAdapter.onBindViewHolder","location":"app/com.newera.neoflow.ui.adapters/-todo-adapter/on-bind-view-holder.html","searchKeys":["onBindViewHolder","open override fun onBindViewHolder(holder: TodoAdapter.TodoViewHolder, position: Int)","com.newera.neoflow.ui.adapters.TodoAdapter.onBindViewHolder"]},{"name":"open override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): EditSubTaskAdapter.EditSubTaskViewHolder","description":"com.newera.neoflow.ui.adapters.EditSubTaskAdapter.onCreateViewHolder","location":"app/com.newera.neoflow.ui.adapters/-edit-sub-task-adapter/on-create-view-holder.html","searchKeys":["onCreateViewHolder","open override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): EditSubTaskAdapter.EditSubTaskViewHolder","com.newera.neoflow.ui.adapters.EditSubTaskAdapter.onCreateViewHolder"]},{"name":"open override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): SubTaskAdapter.SubTaskViewHolder","description":"com.newera.neoflow.ui.adapters.SubTaskAdapter.onCreateViewHolder","location":"app/com.newera.neoflow.ui.adapters/-sub-task-adapter/on-create-view-holder.html","searchKeys":["onCreateViewHolder","open override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): SubTaskAdapter.SubTaskViewHolder","com.newera.neoflow.ui.adapters.SubTaskAdapter.onCreateViewHolder"]},{"name":"open override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): TodoAdapter.TodoViewHolder","description":"com.newera.neoflow.ui.adapters.TodoAdapter.onCreateViewHolder","location":"app/com.newera.neoflow.ui.adapters/-todo-adapter/on-create-view-holder.html","searchKeys":["onCreateViewHolder","open override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): TodoAdapter.TodoViewHolder","com.newera.neoflow.ui.adapters.TodoAdapter.onCreateViewHolder"]},{"name":"open override fun onDestroyView()","description":"com.newera.neoflow.ui.fragments.AllTodoFragment.onDestroyView","location":"app/com.newera.neoflow.ui.fragments/-all-todo-fragment/on-destroy-view.html","searchKeys":["onDestroyView","open override fun onDestroyView()","com.newera.neoflow.ui.fragments.AllTodoFragment.onDestroyView"]},{"name":"open override fun onDestroyView()","description":"com.newera.neoflow.ui.fragments.EditTodoFragment.onDestroyView","location":"app/com.newera.neoflow.ui.fragments/-edit-todo-fragment/on-destroy-view.html","searchKeys":["onDestroyView","open override fun onDestroyView()","com.newera.neoflow.ui.fragments.EditTodoFragment.onDestroyView"]},{"name":"open override fun onReceive(context: Context, intent: Intent)","description":"com.newera.neoflow.logic.receiver.AlarmReceiver.onReceive","location":"app/com.newera.neoflow.logic.receiver/-alarm-receiver/on-receive.html","searchKeys":["onReceive","open override fun onReceive(context: Context, intent: Intent)","com.newera.neoflow.logic.receiver.AlarmReceiver.onReceive"]},{"name":"open override fun onSubTaskTitleChanged(position: Int, newTitle: String)","description":"com.newera.neoflow.ui.fragments.EditTodoFragment.onSubTaskTitleChanged","location":"app/com.newera.neoflow.ui.fragments/-edit-todo-fragment/on-sub-task-title-changed.html","searchKeys":["onSubTaskTitleChanged","open override fun onSubTaskTitleChanged(position: Int, newTitle: String)","com.newera.neoflow.ui.fragments.EditTodoFragment.onSubTaskTitleChanged"]},{"name":"open override fun onViewCreated(view: View, savedInstanceState: Bundle?)","description":"com.newera.neoflow.ui.fragments.AllTodoFragment.onViewCreated","location":"app/com.newera.neoflow.ui.fragments/-all-todo-fragment/on-view-created.html","searchKeys":["onViewCreated","open override fun onViewCreated(view: View, savedInstanceState: Bundle?)","com.newera.neoflow.ui.fragments.AllTodoFragment.onViewCreated"]},{"name":"open override fun onViewCreated(view: View, savedInstanceState: Bundle?)","description":"com.newera.neoflow.ui.fragments.EditTodoFragment.onViewCreated","location":"app/com.newera.neoflow.ui.fragments/-edit-todo-fragment/on-view-created.html","searchKeys":["onViewCreated","open override fun onViewCreated(view: View, savedInstanceState: Bundle?)","com.newera.neoflow.ui.fragments.EditTodoFragment.onViewCreated"]},{"name":"open override fun removeSubTask(position: Int)","description":"com.newera.neoflow.ui.fragments.EditTodoFragment.removeSubTask","location":"app/com.newera.neoflow.ui.fragments/-edit-todo-fragment/remove-sub-task.html","searchKeys":["removeSubTask","open override fun removeSubTask(position: Int)","com.newera.neoflow.ui.fragments.EditTodoFragment.removeSubTask"]},{"name":"open override fun removeSubTask(todoItemId: Int, tasks: List<Task>)","description":"com.newera.neoflow.ui.fragments.AllTodoFragment.removeSubTask","location":"app/com.newera.neoflow.ui.fragments/-all-todo-fragment/remove-sub-task.html","searchKeys":["removeSubTask","open override fun removeSubTask(todoItemId: Int, tasks: List<Task>)","com.newera.neoflow.ui.fragments.AllTodoFragment.removeSubTask"]},{"name":"open override fun removeTodo(todoItem: TodoItem)","description":"com.newera.neoflow.ui.fragments.AllTodoFragment.removeTodo","location":"app/com.newera.neoflow.ui.fragments/-all-todo-fragment/remove-todo.html","searchKeys":["removeTodo","open override fun removeTodo(todoItem: TodoItem)","com.newera.neoflow.ui.fragments.AllTodoFragment.removeTodo"]},{"name":"open override fun updateSubTaskCompletion(position: Int, isCompleted: Boolean)","description":"com.newera.neoflow.ui.fragments.EditTodoFragment.updateSubTaskCompletion","location":"app/com.newera.neoflow.ui.fragments/-edit-todo-fragment/update-sub-task-completion.html","searchKeys":["updateSubTaskCompletion","open override fun updateSubTaskCompletion(position: Int, isCompleted: Boolean)","com.newera.neoflow.ui.fragments.EditTodoFragment.updateSubTaskCompletion"]},{"name":"open override fun updateSubTaskCompletion(todoItem: TodoItem, position: Int, isChecked: Boolean)","description":"com.newera.neoflow.ui.fragments.AllTodoFragment.updateSubTaskCompletion","location":"app/com.newera.neoflow.ui.fragments/-all-todo-fragment/update-sub-task-completion.html","searchKeys":["updateSubTaskCompletion","open override fun updateSubTaskCompletion(todoItem: TodoItem, position: Int, isChecked: Boolean)","com.newera.neoflow.ui.fragments.AllTodoFragment.updateSubTaskCompletion"]},{"name":"open override fun updateTodoCompletion(todoItem: TodoItem, completed: Boolean)","description":"com.newera.neoflow.ui.fragments.AllTodoFragment.updateTodoCompletion","location":"app/com.newera.neoflow.ui.fragments/-all-todo-fragment/update-todo-completion.html","searchKeys":["updateTodoCompletion","open override fun updateTodoCompletion(todoItem: TodoItem, completed: Boolean)","com.newera.neoflow.ui.fragments.AllTodoFragment.updateTodoCompletion"]},{"name":"open override fun updateTodoDate(todoItem: TodoItem)","description":"com.newera.neoflow.ui.fragments.AllTodoFragment.updateTodoDate","location":"app/com.newera.neoflow.ui.fragments/-all-todo-fragment/update-todo-date.html","searchKeys":["updateTodoDate","open override fun updateTodoDate(todoItem: TodoItem)","com.newera.neoflow.ui.fragments.AllTodoFragment.updateTodoDate"]},{"name":"open override fun updateTodoImportance(todoItem: TodoItem, important: Boolean)","description":"com.newera.neoflow.ui.fragments.AllTodoFragment.updateTodoImportance","location":"app/com.newera.neoflow.ui.fragments/-all-todo-fragment/update-todo-importance.html","searchKeys":["updateTodoImportance","open override fun updateTodoImportance(todoItem: TodoItem, important: Boolean)","com.newera.neoflow.ui.fragments.AllTodoFragment.updateTodoImportance"]},{"name":"open override fun updateTodoTime(todoItem: TodoItem)","description":"com.newera.neoflow.ui.fragments.AllTodoFragment.updateTodoTime","location":"app/com.newera.neoflow.ui.fragments/-all-todo-fragment/update-todo-time.html","searchKeys":["updateTodoTime","open override fun updateTodoTime(todoItem: TodoItem)","com.newera.neoflow.ui.fragments.AllTodoFragment.updateTodoTime"]},{"name":"suspend fun addTodo(todoItem: TodoItem)","description":"com.newera.neoflow.logic.repository.TodoRepository.addTodo","location":"app/com.newera.neoflow.logic.repository/-todo-repository/add-todo.html","searchKeys":["addTodo","suspend fun addTodo(todoItem: TodoItem)","com.newera.neoflow.logic.repository.TodoRepository.addTodo"]},{"name":"suspend fun removeTodo(todoItem: TodoItem)","description":"com.newera.neoflow.logic.repository.TodoRepository.removeTodo","location":"app/com.newera.neoflow.logic.repository/-todo-repository/remove-todo.html","searchKeys":["removeTodo","suspend fun removeTodo(todoItem: TodoItem)","com.newera.neoflow.logic.repository.TodoRepository.removeTodo"]},{"name":"suspend fun updateTodo(todoItem: TodoItem)","description":"com.newera.neoflow.logic.repository.TodoRepository.updateTodo","location":"app/com.newera.neoflow.logic.repository/-todo-repository/update-todo.html","searchKeys":["updateTodo","suspend fun updateTodo(todoItem: TodoItem)","com.newera.neoflow.logic.repository.TodoRepository.updateTodo"]},{"name":"suspend fun updateTodoChecked(todoItemId: Int, completed: Boolean)","description":"com.newera.neoflow.logic.repository.TodoRepository.updateTodoChecked","location":"app/com.newera.neoflow.logic.repository/-todo-repository/update-todo-checked.html","searchKeys":["updateTodoChecked","suspend fun updateTodoChecked(todoItemId: Int, completed: Boolean)","com.newera.neoflow.logic.repository.TodoRepository.updateTodoChecked"]},{"name":"suspend fun updateTodoDueDate(todoItemId: Int, dueDate: Long)","description":"com.newera.neoflow.logic.repository.TodoRepository.updateTodoDueDate","location":"app/com.newera.neoflow.logic.repository/-todo-repository/update-todo-due-date.html","searchKeys":["updateTodoDueDate","suspend fun updateTodoDueDate(todoItemId: Int, dueDate: Long)","com.newera.neoflow.logic.repository.TodoRepository.updateTodoDueDate"]},{"name":"suspend fun updateTodoDueDateTime(todoItemId: Int, dueDate: Long, remainderTime: Long)","description":"com.newera.neoflow.logic.repository.TodoRepository.updateTodoDueDateTime","location":"app/com.newera.neoflow.logic.repository/-todo-repository/update-todo-due-date-time.html","searchKeys":["updateTodoDueDateTime","suspend fun updateTodoDueDateTime(todoItemId: Int, dueDate: Long, remainderTime: Long)","com.newera.neoflow.logic.repository.TodoRepository.updateTodoDueDateTime"]},{"name":"suspend fun updateTodoImportant(todoItemId: Int, important: Boolean)","description":"com.newera.neoflow.logic.repository.TodoRepository.updateTodoImportant","location":"app/com.newera.neoflow.logic.repository/-todo-repository/update-todo-important.html","searchKeys":["updateTodoImportant","suspend fun updateTodoImportant(todoItemId: Int, important: Boolean)","com.newera.neoflow.logic.repository.TodoRepository.updateTodoImportant"]},{"name":"suspend fun updateTodoTasks(todoItemId: Int, tasks: List<Task>)","description":"com.newera.neoflow.logic.repository.TodoRepository.updateTodoTasks","location":"app/com.newera.neoflow.logic.repository/-todo-repository/update-todo-tasks.html","searchKeys":["updateTodoTasks","suspend fun updateTodoTasks(todoItemId: Int, tasks: List<Task>)","com.newera.neoflow.logic.repository.TodoRepository.updateTodoTasks"]},{"name":"suspend fun updateTodoTime(todoItemId: Int, remainderTime: Long)","description":"com.newera.neoflow.logic.repository.TodoRepository.updateTodoTime","location":"app/com.newera.neoflow.logic.repository/-todo-repository/update-todo-time.html","searchKeys":["updateTodoTime","suspend fun updateTodoTime(todoItemId: Int, remainderTime: Long)","com.newera.neoflow.logic.repository.TodoRepository.updateTodoTime"]},{"name":"val SUBTASK_COMPARATOR: DiffUtil.ItemCallback<Task>","description":"com.newera.neoflow.logic.utils.Comparators.SUBTASK_COMPARATOR","location":"app/com.newera.neoflow.logic.utils/-comparators/-s-u-b-t-a-s-k_-c-o-m-p-a-r-a-t-o-r.html","searchKeys":["SUBTASK_COMPARATOR","val SUBTASK_COMPARATOR: DiffUtil.ItemCallback<Task>","com.newera.neoflow.logic.utils.Comparators.SUBTASK_COMPARATOR"]},{"name":"val TODO_COMPARATOR: DiffUtil.ItemCallback<TodoItem>","description":"com.newera.neoflow.logic.utils.Comparators.TODO_COMPARATOR","location":"app/com.newera.neoflow.logic.utils/-comparators/-t-o-d-o_-c-o-m-p-a-r-a-t-o-r.html","searchKeys":["TODO_COMPARATOR","val TODO_COMPARATOR: DiffUtil.ItemCallback<TodoItem>","com.newera.neoflow.logic.utils.Comparators.TODO_COMPARATOR"]},{"name":"val binding: <ERROR CLASS>","description":"com.newera.neoflow.ui.adapters.TodoAdapter.TodoViewHolder.binding","location":"app/com.newera.neoflow.ui.adapters/-todo-adapter/-todo-view-holder/binding.html","searchKeys":["binding","val binding: <ERROR CLASS>","com.newera.neoflow.ui.adapters.TodoAdapter.TodoViewHolder.binding"]},{"name":"val name: String","description":"com.newera.neoflow.data.models.Filter.ALL.name","location":"app/com.newera.neoflow.data.models/-filter/-a-l-l/name.html","searchKeys":["name","val name: String","com.newera.neoflow.data.models.Filter.ALL.name"]},{"name":"val name: String","description":"com.newera.neoflow.data.models.Filter.COMPLETED.name","location":"app/com.newera.neoflow.data.models/-filter/-c-o-m-p-l-e-t-e-d/name.html","searchKeys":["name","val name: String","com.newera.neoflow.data.models.Filter.COMPLETED.name"]},{"name":"val name: String","description":"com.newera.neoflow.data.models.Filter.IMPORTANT.name","location":"app/com.newera.neoflow.data.models/-filter/-i-m-p-o-r-t-a-n-t/name.html","searchKeys":["name","val name: String","com.newera.neoflow.data.models.Filter.IMPORTANT.name"]},{"name":"val ordinal: Int","description":"com.newera.neoflow.data.models.Filter.ALL.ordinal","location":"app/com.newera.neoflow.data.models/-filter/-a-l-l/ordinal.html","searchKeys":["ordinal","val ordinal: Int","com.newera.neoflow.data.models.Filter.ALL.ordinal"]},{"name":"val ordinal: Int","description":"com.newera.neoflow.data.models.Filter.COMPLETED.ordinal","location":"app/com.newera.neoflow.data.models/-filter/-c-o-m-p-l-e-t-e-d/ordinal.html","searchKeys":["ordinal","val ordinal: Int","com.newera.neoflow.data.models.Filter.COMPLETED.ordinal"]},{"name":"val ordinal: Int","description":"com.newera.neoflow.data.models.Filter.IMPORTANT.ordinal","location":"app/com.newera.neoflow.data.models/-filter/-i-m-p-o-r-t-a-n-t/ordinal.html","searchKeys":["ordinal","val ordinal: Int","com.newera.neoflow.data.models.Filter.IMPORTANT.ordinal"]},{"name":"val todoFilter: MutableStateFlow<Filter>","description":"com.newera.neoflow.ui.viewmodels.AllTodoViewModel.todoFilter","location":"app/com.newera.neoflow.ui.viewmodels/-all-todo-view-model/todo-filter.html","searchKeys":["todoFilter","val todoFilter: MutableStateFlow<Filter>","com.newera.neoflow.ui.viewmodels.AllTodoViewModel.todoFilter"]},{"name":"val todoList: LiveData<Any>","description":"com.newera.neoflow.ui.viewmodels.AllTodoViewModel.todoList","location":"app/com.newera.neoflow.ui.viewmodels/-all-todo-view-model/todo-list.html","searchKeys":["todoList","val todoList: LiveData<Any>","com.newera.neoflow.ui.viewmodels.AllTodoViewModel.todoList"]},{"name":"var completed: Boolean = false","description":"com.newera.neoflow.data.models.TodoItem.completed","location":"app/com.newera.neoflow.data.models/-todo-item/completed.html","searchKeys":["completed","var completed: Boolean = false","com.newera.neoflow.data.models.TodoItem.completed"]},{"name":"var createdAt: Long","description":"com.newera.neoflow.data.models.TodoItem.createdAt","location":"app/com.newera.neoflow.data.models/-todo-item/created-at.html","searchKeys":["createdAt","var createdAt: Long","com.newera.neoflow.data.models.TodoItem.createdAt"]},{"name":"var dueDate: Long","description":"com.newera.neoflow.data.models.TodoItem.dueDate","location":"app/com.newera.neoflow.data.models/-todo-item/due-date.html","searchKeys":["dueDate","var dueDate: Long","com.newera.neoflow.data.models.TodoItem.dueDate"]},{"name":"var id: Int = 0","description":"com.newera.neoflow.data.models.TodoItem.id","location":"app/com.newera.neoflow.data.models/-todo-item/id.html","searchKeys":["id","var id: Int = 0","com.newera.neoflow.data.models.TodoItem.id"]},{"name":"var id: Int? = 0","description":"com.newera.neoflow.data.models.Task.id","location":"app/com.newera.neoflow.data.models/-task/id.html","searchKeys":["id","var id: Int? = 0","com.newera.neoflow.data.models.Task.id"]},{"name":"var important: Boolean = false","description":"com.newera.neoflow.data.models.TodoItem.important","location":"app/com.newera.neoflow.data.models/-todo-item/important.html","searchKeys":["important","var important: Boolean = false","com.newera.neoflow.data.models.TodoItem.important"]},{"name":"var isCompleted: Boolean = false","description":"com.newera.neoflow.data.models.Task.isCompleted","location":"app/com.newera.neoflow.data.models/-task/is-completed.html","searchKeys":["isCompleted","var isCompleted: Boolean = false","com.newera.neoflow.data.models.Task.isCompleted"]},{"name":"var remainderTime: Long","description":"com.newera.neoflow.data.models.TodoItem.remainderTime","location":"app/com.newera.neoflow.data.models/-todo-item/remainder-time.html","searchKeys":["remainderTime","var remainderTime: Long","com.newera.neoflow.data.models.TodoItem.remainderTime"]},{"name":"var tasks: MutableList<Task>","description":"com.newera.neoflow.data.models.TodoItem.tasks","location":"app/com.newera.neoflow.data.models/-todo-item/tasks.html","searchKeys":["tasks","var tasks: MutableList<Task>","com.newera.neoflow.data.models.TodoItem.tasks"]},{"name":"var title: String","description":"com.newera.neoflow.data.models.Task.title","location":"app/com.newera.neoflow.data.models/-task/title.html","searchKeys":["title","var title: String","com.newera.neoflow.data.models.Task.title"]},{"name":"var title: String?","description":"com.newera.neoflow.data.models.TodoItem.title","location":"app/com.newera.neoflow.data.models/-todo-item/title.html","searchKeys":["title","var title: String?","com.newera.neoflow.data.models.TodoItem.title"]}]
